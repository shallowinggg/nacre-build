<?xml version="1.0" encoding="UTF-8"?>
<!--
Copyright 2020 the original author or authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<!DOCTYPE module PUBLIC
        "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">
<module name="Checker">

    <module name="FileLength">
        <property name="max" value="3000"/>
    </module>

    <module name="TreeWalker">
        <!-- Annotations -->

        <module name="AnnotationLocation">
            <property name="allowSamelineSingleParameterlessAnnotation" value="false"/>
        </module>
        <module name="AnnotationUseStyle">
            <property name="elementStyle" value="compact"/>
        </module>
        <module name="MissingOverride"/>
        <module name="PackageAnnotation"/>

        <!-- block check -->

        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock">
            <property name="option" value="text"/>
        </module>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>

        <!-- class design -->

        <module name="FinalClass"/>
        <module name="InnerTypeLast"/>
        <module name="InterfaceIsType"/>
        <module name="MutableException">
            <property name="format" value="^.*Exception$"/>
        </module>
        <module name="OneTopLevelClass"/>

        <!-- coding -->

        <module name="CovariantEquals"/>
        <module name="EmptyStatement"/>
        <module name="EqualsAvoidNull"/>
        <!--Checks that classes that override equals() also override hashCode()-->
        <module name="EqualsHashCode"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="NestedForDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NestedIfDepth">
            <property name="max" value="5"/>
        </module>
        <module name="NestedTryDepth">
            <property name="max" value="3"/>
        </module>
        <module name="NoFinalizer"/>
        <module name="OneStatementPerLine"/>
        <module name="OverloadMethodsDeclarationOrder"/>
        <!--Checks for over-complicated boolean expressions. Currently finds code like if (topic == true), topic || true, !false, etc.-->
        <module name="SimplifyBooleanExpression"/>
        <!--Checks for over-complicated boolean return statements. -->
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <!-- Check that the default is after all the cases in producerGroup switch statement -->
        <module name="DefaultComesLast"/>

        <!-- Importing -->

        <module name="UnusedImports"/>
        <module name="RedundantImport"/>
        <module name="AvoidStarImport"/>

        <!-- Miscellaneous -->

        <module name="ArrayTypeStyle"/>
        <module name="CommentsIndentation"/>
        <!-- Checks that the outer type name and the file name match. For example, the class Foo must be in a file named Foo.java.  -->
        <module name="OuterTypeFilename"/>
        <!-- Checks that long constants are defined with an upper ell -->
        <module name="UpperEll"/>

        <!-- Naming -->

        <!--Validates identifiers for class type parameters-->
        <module name="ClassTypeParameterName">
            <property name="format" value="(^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$)"/>
        </module>
        <module name="ConstantName">
            <property name="format" value="(^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$)|(^log(ger)?$)"/>
        </module>
        <!--Checks that local, non-final variable names conform to producerGroup format specified by the format property-->
        <module name="LocalVariableName"/>
        <!--Validates identifiers for local, final variables, including catch parameters-->
        <module name="LocalFinalVariableName"/>
        <!--Validates identifiers for non-static fields-->
        <module name="MemberName"/>
        <module name="MethodName"/>
        <!--Validates identifiers for method type parameters-->
        <module name="MethodTypeParameterName">
            <property name="format" value="(^[A-Z][A-Z0-9]*$)"/>
        </module>
        <module name="PackageName">
            <property name="format" value="^io\.github\.shallowinggg(\.[a-z]+)*$"/>
        </module>
        <module name="ParameterName"/>
        <module name="TypeName"/>

        <!--whitespace-->

        <module name="EmptyLineSeparator"/>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoLineWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>

        <!-- regex -->
        <module name="RegexpSinglelineJava">
            <property name="format" value="System\.(out)|(err)\.print(ln)?"/>
            <property name="message" value="Prohibit invoking System.out in source code !"/>
            <property name="ignoreComments" value="true"/>
        </module>

        <module name="RegexpSinglelineJava">
            <property name="format"
                      value=".*[\u3400-\u4DB5\u4E00-\u9FA5\u9FA6-\u9FBB\uF900-\uFA2D\uFA30-\uFA6A\uFA70-\uFAD9\uFF00-\uFFEF\u2E80-\u2EFF\u3000-\u303F\u31C0-\u31EF]+.*"/>
            <property name="message" value="Not allow chinese character !"/>
            <property name="ignoreComments" value="true"/>
        </module>

    </module>
</module>
